import React, { useState, useEffect } from 'react'
import { withRouter } from 'react-router-dom'
import ContentResource from '../structure/ContentResource.jsx'
import { useLoadResource } from '../../services/loadResourceHook'
import { resourceName, resourceUrl, listProperties, tableType } from '../../static/###resourceSingular###Resource.json'
import { deleteResource } from '../../services/###resourcePlural###'

function ###ResourcePlural###() {
  const [shouldLoad, setShouldLoad] = useState(true)
  const [data, loading] = useLoadResource(resourceUrl, shouldLoad)
  const [preloader, setPreloader] = useState(true)
  const [resources, setResources] = useState([])

  const actions = {
    reload: () => setShouldLoad(true),
    delete: async (selectedResources) => {
      setPreloader(true)
      for (const resource of Array.from(selectedResources.values())) {
        await deleteResource(resource.###referencedResourceSingular1###_id, resource.###referencedResourceSingular2###_id)
      }
      setShouldLoad(true)
    }
  }

  useEffect(() => {
    setResources(data)
  }, [data])

  useEffect(() => {
    setPreloader(loading)
  }, [loading])
  
  useEffect(() => {
    setShouldLoad(false)
  }, [shouldLoad])

  return (
    <ContentResource customProps={{ actions, listProperties, resourceName, resourceUrl, tableType }} resources={resources} preloader={preloader} />
  )
}

export default withRouter(###ResourcePlural###)